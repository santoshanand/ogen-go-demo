// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AddPet implements addPet operation.
	//
	// Add a new pet to the store.
	//
	// POST /pet
	AddPet(ctx context.Context, req Pet) (Pet, error)
	// DeletePet implements deletePet operation.
	//
	// Deletes a pet.
	//
	// DELETE /pet/{petId}
	DeletePet(ctx context.Context, params DeletePetParams) (DeletePetOK, error)
	// GetPetById implements getPetById operation.
	//
	// Returns a single pet.
	//
	// GET /pet/{petId}
	GetPetById(ctx context.Context, params GetPetByIdParams) (GetPetByIdRes, error)
	// UpdatePet implements updatePet operation.
	//
	// Updates a pet in the store.
	//
	// POST /pet/{petId}
	UpdatePet(ctx context.Context, params UpdatePetParams) (UpdatePetOK, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...Option) (*Server, error) {
	s, err := newConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
